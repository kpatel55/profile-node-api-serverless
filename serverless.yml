service: node-serverless-profile
frameworkVersion: '3'

custom:
  tableName: 'profiles-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ ProfilesTable, Arn ]
  environment:
    PROFILES_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: handler/createProfile.createProfile
    events:
      - http:
          path: profiles/create
          method: post
          cors: true
  get:
    handler: handler/getProfile.getProfile
    events:
      - http:
          path: profiles/get/{id}
          method: get
          cors: true
  delete:
    handler: handler/deleteProfile.deleteProfile
    events:
      - http:
          path: profiles/delete/{id}
          method: delete
          cors: true
  update:
    handler: handler/updateProfile.updateProfile
    events:
      - http:
          path: profiles/update/{id}
          method: put
          cors: true

resources:
  Resources:
    ProfilesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
